# -*- coding: utf-8 -*-
"""Proses EDA data covid dan Handling outlier data stroke.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aM6tNSgcsYrO8Saqhj-yJvTl9iO-7kgt
"""

#import library yang diperlukan untuk proses EDA
import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 
import seaborn as sns 
from scipy import stats

from google.colab import drive
drive.mount('/content/drive')

#Mengimport data dari directory Google Drive
data = pd.read_csv('/content/drive/MyDrive/country_vaccinations.csv')
data.info()
data.head(5) #Mendapatkan info dari dataset yang diimport

#slicing data dan dipilih country bernilai Italy
data_indo= data[data["country"]=="Indonesia"]
data_indo=data_indo.reset_index(drop=True) #Melihat index dimulai dari 0 lagi
data_indo.head()

#Melihat info data dari country yang bernilai Italy
data_indo.info()

#Membuat persentase missing value disetiap column pada country yang bernilai Italy
nulls = data_indo.isnull().sum()
nulls_percentage = nulls[nulls!=0]/data_indo.shape[0]*100
print('Persentase missing value setiap variabel untuk negara Italia:\n')
print(round(nulls_percentage,2))

"""Missing Value"""

#Menghilangkan kolom yang tidak dipakai
data_indo=data_indo.drop(['country', 'iso_code','source_name','source_website'], axis=1)

#Mengubah date menjadi index dan mengubah type data menjadi datetime
data_indo_ind=data_indo.set_index(['date'])  
data_indo_ind.index = pd.to_datetime(data_indo_ind.index)

data_indo_ind.plot(figsize=(10,5),kind='line', linewidth=2)

data_indo_drop=data_indo_ind.dropna() 
data_indo_drop.shape
data_indo_drop['total_vaccinations'].plot(figsize=(10,5),kind='line', linewidth=2)

# Menggunakan metode polynomial orde ke-2 (x^2)
data_ind_interpolasi=data_indo_ind.interpolate(method="polynomial", order=2) 
data_ind_interpolasi.shape 
data_ind_interpolasi['total_vaccinations'].plot(figsize=(10,5),kind='line', linewidth=2)

ax = data_ind_interpolasi['total_vaccinations'].plot(figsize=(15,8),kind='line', linewidth=5,color="green")
data_indo_ind['total_vaccinations'].plot(ax=ax,color='blue',linewidth=7)

"""Data Outlier

Karena pada data vaksin merupakan timeseries, yang dimana setiap harinya akan ada perubahan maka data outlier pun sangat banyak. Oleh karena itu disini saya memakai data stroke prediction untuk menangani data yang outlier.
"""

#Mengimport data stroke
data_stroke = pd.read_csv('/content/healthcare-dataset-stroke-data.csv')
data_stroke.info()

#Memilih column apa saja yang dipiih untuk diolah dengan menggunakan fungsi dropna
data_stroke_select = data_stroke[['age','avg_glucose_level','bmi']]
data_stroke_select=data_stroke_select.dropna()
data_stroke_select.info()
data_stroke_select.describe()

#Melihat data outlier pada data stroke prediction dengan menggunakan boxplot
data_stroke_select.plot(kind='box',subplots=True,layout=(1,3),sharex=False, figsize=(15,5))
plt.show()

data_stroke_select.plot(kind='density',subplots=True,layout=(1,3),sharex=False, figsize=(15,5))
plt.show()

"""Z-Score Method"""

data_stroke_outlier=data_stroke_select[(np.abs(stats.zscore(data_stroke_select)) < 3).all(axis=1)]
data_stroke_outlier.plot(kind='box',subplots=True,layout=(1,3),sharex=False, figsize=(15,5))
plt.show()

data_stroke_outlier.plot(kind='density',subplots=True,layout=(1,3),sharex=False, figsize=(15,5))
plt.show()

#Melihat info data setelah dilakukan handling dengan z-score method
data_stroke_outlier.info()
data_stroke_outlier.describe()

"""IQR-Method"""

#Menemukan Q1,Q2,Q3 pada kolom data
Q1 = data_stroke_select.quantile(q=.25)
Q3 = data_stroke_select.quantile(q=.75)
IQR = data_stroke_select.apply(stats.iqr) #IQR=Q3-Q1

#Menyimpan nilai antara 1.5*IQR dari Q1 dan Q3
data_stroke_iqr = data_stroke_select[~((data_stroke_select< (Q1-1.5*IQR)) | (data_stroke_select> (Q3+1.5*IQR))).any(axis=1)]

data_stroke_iqr.plot(kind='box',subplots=True,layout=(1,3),sharex=False, figsize=(15,5))
plt.show()

data_stroke_iqr.plot(kind='density',subplots=True,layout=(1,3),sharex=False, figsize=(15,5))
plt.show()

#Melihat info data dengan handling method IQR
data_stroke_iqr.info()
data_stroke_iqr.describe()